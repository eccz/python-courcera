v_count = int(input())
v_place = list(map(int, input().split()))[:v_count:]
s_count = int(input())
s_place = list(map(int, input().split()))[:s_count:]
v_place_num = []
s_place_num = []
answer = []
j = 0
for i in range(v_count):
    v_place_num.append((v_place[i], i + 1))
for i in range(s_count):
    s_place_num.append((s_place[i], i + 1))
v_place_num.sort()
s_place_num.sort()
for i, e in enumerate(v_place_num):
    dist = abs(v_place_num[i][0] - s_place_num[j][0])
    while j < len(s_place_num) - 1 \
            and dist > abs(v_place_num[i][0] - s_place_num[j + 1][0]):
        dist = abs(v_place_num[i][0] - s_place_num[j + 1][0])
        j += 1
    else:
        answer.append((v_place_num[i][1], s_place_num[j][1]))
answer.sort()
for i, e in enumerate(answer):
    print(answer[i][1], end=' ')

# Штаб гражданской обороны Тридесятой области решил обновить план спасения на случай ядерной атаки.
# Известно, что все n селений Тридесятой области находятся вдоль одной прямой дороги.
# Вдоль дороги также расположены m бомбоубежищ, в которых жители селений могут укрыться на случай ядерной атаки.
# Чтобы спасение в случае ядерной тревоги проходило как можно эффективнее,
# необходимо для каждого селения определить ближайшее к нему бомбоубежище.

# В первой строке вводится число n - количество селений (1 <= n <= 100000).
# Вторая строка содержит n различных целых чисел,
# i-е из этих чисел задает расстояние от начала дороги до i-го селения.
# В третьей строке входных данных задается число m - количество бомбоубежищ (1 <= m <= 100000).
# Четвертая строка содержит m различных целых чисел,
# i-е из этих чисел задает расстояние от начала дороги до i-го бомбоубежища.
# Все расстояния положительны и не превышают 10⁹. Селение и убежище могут располагаться в одной точке.

# Выведите  n чисел - для каждого селения выведите номер ближайшего к нему бомбоубежища.
# Бомбоубежища пронумерованы от 1 до m в том порядке, в котором они заданы во входных данных.
#
# Указание
#
# Создайте список кортежей из пар (позиция селения, его номер в исходном списке),
# а также аналогичный список для бомбоубежищ. Отсортируйте эти списки.
# Перебирайте селения в порядке возрастания.
# Для селения ближайшими могут быть два соседних бомбоубежища, среди них надо выбрать ближайшее.
# При переходе к следующему селению не обязательно искать ближайшее бомбоубежище с самого начала.
# Его можно искать начиная с позиции, найденной для предыдущего города.
# Аналогично, не нужно искать подходящее бомбоубежище до конца списка бомбоубежищ: достаточно найти самое близкое.
# Если Вы неэффективно реализуете эту часть, то решение тесты не пройдет.
#
# Для хранения ответа используйте список, где индекс будет номером селения,
# а по этому индексу будет запоминаться номер бомбоубежища.

# Входные данные:
# 4
# 1 2 6 10
# 2
# 7 3
#
# Вывод программы:
# 2 2 1 1
#
# Тест 2
# Входные данные:
# 1
# 1
# 1
# 2
#
# Вывод программы:
# 1
#
# Тест 3
# Входные данные:
# 10
# 79 64 13 8 38 29 58 20 56 17
# 10
# 53 19 20 85 82 39 58 46 51 69
#
# Вывод программы:
# 5 10 2 2 6 3 7 3 7 2
