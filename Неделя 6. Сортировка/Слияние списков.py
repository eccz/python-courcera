def merge(a1, b1):
    c1 = []
    i, j = 0, 0
    while len(c1) < (len(a1) + len(b1)):
        if i >= len(a1):
            c1.append(b1[j])
            j += 1
        elif j >= len(b1):
            c1.append(a1[i])
            i += 1
        elif a1[i] >= b1[j]:
            c1.append(b1[j])
            j += 1
        else:
            c1.append(a1[i])
            i += 1
    return c1


inputlist1 = list(map(int, input().split()))
inputlist2 = list(map(int, input().split()))
print(*merge(inputlist1, inputlist2))

# Даны два целочисленных списка A и B, упорядоченных по неубыванию.
# Объедините их в один упорядоченный список С (то есть он должен содержать len(A)+len(B) элементов).
# Решение оформите в виде функции merge(A, B), возвращающей новый список.
# Алгоритм должен иметь сложность O(len(A)+len(B)). Модифицировать исходные списки запрещается.
# Использовать функцию sorted и метод sort запрещается.
# Программа получает на вход два неубывающих списка, каждый в отдельной строке.
# Программа должна вывести последовательность неубывающих чисел, полученных объединением двух данных списков.
